{"version":3,"sources":["webpack:///./src/client/app/components/shared/PostText/PostText.module.scss","webpack:///./src/client/app/components/screens/PostEditScreen/PostEditScreen.module.scss","webpack:///./src/client/app/components/screens/PostEditScreen/components/InputFields/InputFields.module.scss","webpack:///./src/client/app/components/screens/PostEditScreen/components/InputFields/InputFields.jsx","webpack:///./src/client/app/components/screens/PostEditScreen/components/InputFields/index.js","webpack:///./src/client/app/components/screens/PostEditScreen/PostEditScreen.jsx","webpack:///./src/client/app/components/screens/PostEditScreen/PostEditScreen_Container.jsx"],"names":["module","exports","post-text","title","post-meta","user-info","author","post-actions","cancel","input-fields","subtitle","img-url","is-large-preview","InputFields_InputFields","_ref","inputData","onInputChange","onCheckboxChange","subTitle","imgDescriptor","isLargePreview","react_default","a","createElement","className","InputFields_module_default","__source","fileName","_jsxFileName","lineNumber","type","name","placeholder","value","onChange","checked","propTypes","prop_types_default","object","isRequired","func","components_InputFields","PostEditScreen_PostEditScreen","state","isDataLoaded","formData","handleInputChange","e","_this","setState","_defineProperty","target","handleCheckboxChange","handleSaveBtnClick","post","props","data","fetch","id","method","headers","Content-Type","body","JSON","stringify","_extends","contentMarkup","document","querySelector","innerHTML","then","onSave","Component","this","editor","medium_editor_default","targetBlank","toolbar","buttons","contentDefault","action","tagNames","text","hideOnClick","destroy","Spinner","PostEditScreen_jsxFileName","_props$data","PostEditScreen_module_default","href","src","avatarUrl","username","PostText_module_default","dangerouslySetInnerHTML","__html","onClick","Link","to","blogId","defaultProps","screens_PostEditScreen_PostEditScreen","PostEditScreen_Container_PostEditScreen_Container","handleSave","history","push","_this2","window","scrollTo","postId","match","params","Promise","all","response","json","results","__webpack_exports__"],"mappings":"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","file":"js/1.bundle.49e8219434322f3552aa.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post-text\":\"_post-text_YUz8N\",\"title\":\"_title_271kt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post-meta\":\"_post-meta_1mrQ0\",\"user-info\":\"_user-info_1THkX\",\"author\":\"_author_1vwPs\",\"post-actions\":\"_post-actions_qkb88\",\"cancel\":\"_cancel_6Buhb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-fields\":\"_input-fields_1ePXg\",\"title\":\"_title_HzYOt\",\"subtitle\":\"_subtitle_14Y3v\",\"img-url\":\"_img-url_1R5fX\",\"is-large-preview\":\"_is-large-preview_33noB\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './InputFields.module.scss';\r\n\r\nconst InputFields = ({ inputData, onInputChange, onCheckboxChange }) => {\r\n  const { title, subTitle, imgDescriptor, isLargePreview } = inputData;\r\n\r\n  return (\r\n    <div className={styles['input-fields']}>\r\n      <div>\r\n        <input type=\"text\" className={styles['img-url']} name=\"imgDescriptor\" placeholder=\"Image descriptor for url\" value={imgDescriptor} onChange={onInputChange} />\r\n      </div>\r\n      <div className={styles['is-large-preview']}>\r\n        <label>\r\n          <input type=\"checkbox\" checked={isLargePreview} onChange={onCheckboxChange} />\r\n          Enable large preview\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <input type=\"text\" className={styles.title} name=\"title\" placeholder=\"Title\" value={title} onChange={onInputChange} />\r\n      </div>\r\n      <div>\r\n        <input type=\"text\" className={styles.subtitle} name=\"subTitle\" placeholder=\"Subtitle\" value={subTitle} onChange={onInputChange} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nInputFields.propTypes = {\r\n  inputData: PropTypes.object.isRequired,\r\n  onInputChange: PropTypes.func.isRequired,\r\n  onCheckboxChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default InputFields;\r\n\r\n/* eslint object-curly-newline: off */\r\n/* eslint jsx-a11y/label-has-for: off */\r\n","import InputFields from './InputFields';\r\n\r\nexport default InputFields;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport MediumEditor from 'medium-editor';\r\n\r\nimport Spinner from '../../shared/Spinner';\r\nimport InputFields from './components/InputFields';\r\n\r\nimport styles from './PostEditScreen.module.scss';\r\nimport postTextStyles from '../../shared/PostText/PostText.module.scss';\r\n\r\nclass PostEditScreen extends React.Component {\r\n  state = {\r\n    isDataLoaded: false,\r\n    formData: {\r\n      title: '',\r\n      subTitle: '',\r\n      imgDescriptor: '',\r\n      isLargePreview: false,\r\n    },\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (!this.props.data || this.state.isDataLoaded) {\r\n      return;\r\n    }\r\n\r\n    this.editor = new MediumEditor('.js-editable', {\r\n      targetBlank: true,\r\n      toolbar: {\r\n        buttons: [\r\n          'bold', 'italic', 'underline', 'anchor', 'h3', 'h4',\r\n          {\r\n            name: 'unorderedlist',\r\n            contentDefault: '<b>UL</b>',\r\n          },\r\n          {\r\n            name: 'orderedlist',\r\n            contentDefault: '<b>OL</b>',\r\n          },\r\n          'quote',\r\n          {\r\n            name: 'pre',\r\n            action: 'append-pre',\r\n            tagNames: ['pre'],\r\n            contentDefault: 'PRE',\r\n          },\r\n          {\r\n            name: 'strikethrough',\r\n            action: 'strikethrough',\r\n            tagNames: ['strike'],\r\n            contentDefault: 'CODE',\r\n          },\r\n        ],\r\n      },\r\n      placeholder: {\r\n        text: 'Tell your story...',\r\n        hideOnClick: false,\r\n      },\r\n    });\r\n\r\n    const { post } = this.props.data;\r\n\r\n    this.setState({\r\n      isDataLoaded: true,\r\n      formData: {\r\n        title: post.title,\r\n        subTitle: post.subTitle,\r\n        imgDescriptor: post.imgDescriptor,\r\n        isLargePreview: post.isLargePreview,\r\n      },\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.editor.destroy();\r\n  }\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({\r\n      formData: {\r\n        ...this.state.formData,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  }\r\n\r\n  handleCheckboxChange = (e) => {\r\n    this.setState({\r\n      formData: {\r\n        ...this.state.formData,\r\n        isLargePreview: e.target.checked,\r\n      },\r\n    });\r\n  }\r\n\r\n  handleSaveBtnClick = () => {\r\n    const { post } = this.props.data;\r\n\r\n    fetch(`/api/posts/${post.id}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        ...this.state.formData,\r\n        contentMarkup: document.querySelector('.js-editable').innerHTML,\r\n      }),\r\n    })\r\n      .then(() => { this.props.onSave(); });\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.data) {\r\n      return (<Spinner />);\r\n    }\r\n\r\n    const { post, author } = this.props.data;\r\n    const inputData = { ...this.state.formData };\r\n\r\n    return (\r\n      <main>\r\n        <div className={styles['post-meta']}>\r\n          <div className={styles['user-info']}>\r\n            <a className=\"avatar avatar--middle avatar--circled\" href=\"#\">\r\n              <img src={author.avatarUrl} />\r\n            </a>\r\n            <a className={styles.author} href=\"#\">{author.username}</a>\r\n          </div>\r\n          <InputFields\r\n            inputData={inputData}\r\n            onInputChange={this.handleInputChange}\r\n            onCheckboxChange={this.handleCheckboxChange}\r\n          />\r\n        </div>\r\n        <div className={`${postTextStyles['post-text']} js-editable`} dangerouslySetInnerHTML={{ __html: post.contentMarkup }} />\r\n        <div className={styles['post-actions']}>\r\n          <button className=\"btn\" onClick={this.handleSaveBtnClick}>Save</button>\r\n          <Link className={styles.cancel} to={`/blogs/${post.blogId}/posts/${post.id}`}>Cancel</Link>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nPostEditScreen.defaultProps = {\r\n  data: null,\r\n};\r\n\r\nPostEditScreen.propTypes = {\r\n  data: PropTypes.object,\r\n  onSave: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PostEditScreen;\r\n\r\n/* eslint max-len: off */\r\n/* eslint react/no-danger: off */\r\n/* eslint react/no-did-update-set-state: off */\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport PostEditScreen from './PostEditScreen';\r\n\r\nclass PostEditScreen_Container extends React.Component {\r\n  state = { data: null }\r\n\r\n  componentDidMount() {\r\n    // non-container logic; should be in HOC or presenter component\r\n    window.scrollTo(0, 0);\r\n\r\n    const { postId } = this.props.match.params;\r\n    const userId = 1;\r\n\r\n    Promise.all([\r\n      fetch(`/api/posts/${postId}`).then((response) => response.json()),\r\n      fetch(`/api/users/${userId}`).then((response) => response.json()),\r\n    ])\r\n      .then((results) => {\r\n        const post = results[0];\r\n        const author = results[1];\r\n\r\n        this.setState({\r\n          data: { post, author },\r\n        });\r\n      });\r\n  }\r\n\r\n  handleSave = () => {\r\n    const { post } = this.state.data;\r\n    this.props.history.push(`/blogs/${post.blogId}/posts/${post.id}`);\r\n  }\r\n\r\n  render() {\r\n    return (<PostEditScreen data={this.state.data} onSave={this.handleSave} />);\r\n  }\r\n}\r\n\r\nPostEditScreen_Container.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default PostEditScreen_Container;\r\n"],"sourceRoot":""}